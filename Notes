
CTCONST
	A word can be flagged as returns a constant. When compiling
    a reference to such a word execute it and compile the 
	resulting literal.

	I tested it and it works fine ( change bootstrap interpreter
	and compile, in core.fth. Also patchup the disassembler etc. )

	This flag can be applied to constants, fake-variables and 
	variables ( buffers too? ).

	It's a speed optimization which I'm not really considering
	right now favoring simplicity. It doesn't save any space
	which is my main consideration atm. ( since a literal
	and a call are usually 1 byte opcode 2 bytes value anyhow )


Wire		endTransmission is supposed to return a status

Threads		When I have start/stop implemented, I need a deferred 
			hook into marker so I can trim threads. For each
			thread in range, schedule, until it becomes the non
			active thread, remove from list. Then the marker code
			can clean up

			Consider an autoscheduler in the VM itself so I can
			stop calling (schedule). In some cases it's nice to
			have control, but in others perhaps not.

			I would do this by periodically injecting (schedule)
			onto the return stack after an opRET opcode.

